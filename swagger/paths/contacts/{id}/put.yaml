tags:
  - 'Contacts'
summary: Upsert contact by ID
operationId: upsertContact
description:
  'Update an existing contact or create a new contact if it does not exist.'
security:
  - bearerAuth: []
parameters:
  - in: path
    name: contactId
    required: true
    schema:
      type: string
    description: 'ID of the contact to be upserted'
    example: '633d45fc8f1d3b1bb01f7c38'
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        required:
          - name
          - phone
        properties:
          name:
            type: string
            example: 'John Doe'
          phoneNumber:
            type: string
            example: '+1234567890'
          email:
            type: string
            example: 'john.doe@example.com'
          photo:
            type: string
            format: binary
            description: 'Photo of the contact, if uploaded'
responses:
  '200':
    description: 'Successfully updated the contact'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: 'Contact upsert successfully'
            data:
              type: object
  '201':
    description: 'Successfully created a new contact'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: 'Contact upsert successfully'
            data:
              type: object
  '400':
    description: 'Invalid input data'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: 'Validation error message.'
  '404':
    description: 'Contact not found for update'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: 'Contact with id={contactId} not found.'
  '500':
    description: 'Server error'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 500
            message:
              type: string
              example: 'Internal server error.'
